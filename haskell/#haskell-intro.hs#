-- Problem 1: Write myZip which zips two lists

myZip [] [] = []
myZip (x1 : xs1) (x2 : xs2) = (x1, x2) : myZip xs1 xs2

-- Problem 2: Write qsort implementing quicksort

qsort [] = []
qsort (pivot:xs) = 
    let less = qsort [ x | x <- xs, x < pivot]
	greater = qsort [x | x <- xs, x >= pivot]
    in less ++ [pivot] ++ greater 

-- Problem 3: Write function fib n, that computes the nth number in the fibonacci sequence in 0(n) time

fib n = 
    let fibHelper (a, b) 0 = a
        fibHelper (a,b) 1 = b
        fibHelper (a, b) n = fibHelper (b, a + b) ( n -1)
    inin fibHelper (0,1) n = fibHelper(b, a + b)(n - 1) 
    

-- Problem 3 Bonus: Construct an infinite sequence of fibonacci numbers, fibs


-- Problem 4: http://projecteuler.net/problem=6


-- Problem 5: http://projecteuler.net/problem=9


-- Problem 6: http://projecteuler.net/problem=5
